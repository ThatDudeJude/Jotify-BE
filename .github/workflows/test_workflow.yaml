name: testing
on: push
env:
  INSTALL_REQUIREMENTS: pip3 install -r requirements.txt
  RUN_DJANGO_TESTS: python3 manage.py test base.tests notes.tests.QuickNotesTests notes.tests.CategorizedNotesTests tasks.tests
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  DEFAULT_FROM_EMAIL: ${{secrets.DEFAULT_FROM_EMAIL}}
  EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
  HOSTNAME1: ${{secrets.HOSTNAME1}}
  EMAIL_BACKEND_DEVELOPMENT: ${{secrets.EMAIL_BACKEND_DEVELOPMENT}}
  EMAIL_BACKEND_PRODUCTION: ${{secrets.EMAIL_BACKEND_PRODUCTION}}
  EMAIL_HOST: ${{secrets.EMAIL_HOST}}
  EMAIL_HOST_CONSOLE: ${{secrets.EMAIL_HOST_CONSOLE}}
  EMAIL_HOST_USER: ${{secrets.EMAIL_HOST_USER}}
  LOCALHOST: ${{secrets.LOCALHOST}}
  NETWORKHOST: ${{secrets.NETWORKHOST}}
  BACKENDHOST: ${{secrets.BACKENDHOST}}
  SU_EMAIL: ${{secrets.SU_EMAIL}}
  SU_PASSWORD: ${{secrets.SU_PASSWORD}}
  DEBUG: False

jobs:
  unit_tests:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: localUser
          POSTGRES_PASSWORD: localPassword
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.8'
      - name: Run django unit tests
        run: |
          $INSTALL_REQUIREMENTS
          $RUN_DJANGO_TESTS
        env:
          DATABASE_URL: postgresql://localUser:localPassword@localhost:5432/test
